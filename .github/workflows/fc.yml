name:  Auto Update FanCode Data

on:
  schedule:
    - cron: "*/5 * * * *"   
  workflow_dispatch:

jobs:
  update-fancode:
    runs-on: ubuntu-latest

    env:
      SOURCE_URL: ${{ secrets.FANCODE_SOURCE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install requests

      - name: Fetch and process FanCode data
        run: |
          python - <<'PY'
          import json, requests, datetime

          
          url = "${{ secrets.FANCODE_SOURCE_URL }}"
          print(f"Fetching from: {url}")
          r = requests.get(url, timeout=20)
          data = r.json()

          
          data["Author"] = "CoderBoyBD"
          data["headers"]["User-Agent"] = "CoderBoyBD/8.0.0 (Linux;Android/13) AndroidXMedia3/1.1.1"
          data["last_updated"] = datetime.datetime.now().strftime("%I:%M:%S %p %d-%m-%Y")

        
          with open("in_rest_api.json", "w", encoding="utf-8") as f:
              json.dump(data, f, indent=2, ensure_ascii=False)

          
          bd_data = json.loads(json.dumps(data).replace("in-mc-fdlive", "bd-mc-fdlive"))
          with open("bd_rest_api.json", "w", encoding="utf-8") as f:
              json.dump(bd_data, f, indent=2, ensure_ascii=False)

          
          def make_m3u(source, filename):
              lines = ["#EXTM3U"]
              for m in source.get("matches", []):
                  if str(m.get("status", "")).upper() in ["LIVE", "STARTED"]:
                      title = f'{m.get("title","Unknown")} ({m.get("tournament","")})'
                      url = (
                          m.get("STREAMING_CDN", {})
                           .get("Primary_Playback_URL")
                      )
                      if not url or not isinstance(url, str):
                          continue  # skip if no playable link
                      logo = m.get("image") or ""
                      lines.append(f'#EXTINF:-1 tvg-logo="{logo}",{title}')
                      lines.append(url)
              with open(filename, "w", encoding="utf-8") as f:
                  f.write("\n".join(lines))

          make_m3u(data, "in_rest_playlist.m3u")
          make_m3u(bd_data, "bd_rest_playlist.m3u")
          print(" Files generated successfully.")
          PY

      - name: Commit & Push updates
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add in_rest_api.json bd_rest_api.json in_rest_playlist.m3u bd_rest_playlist.m3u
          git commit -m "âš¡ Auto update FanCode data ($(date))" || echo "No changes"
          git push
